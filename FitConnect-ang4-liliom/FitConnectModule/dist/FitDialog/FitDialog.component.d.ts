import { OnInit } from '@angular/core';
import { DataService } from "./../Data.service";
import { FitMediatorComponent } from "./../FitMediator/FitMediator.component";
import { MetaformaService } from "./../Metaforma.service";
import { MdIconRegistry, MdDialogRef } from "@angular/material";
import { DomSanitizer } from "@angular/platform-browser";
import { FormGroup } from "@angular/forms";
import { TranslateService } from 'ng2-translate';
export declare class FitDialogComponent implements OnInit {
    dialogRef: MdDialogRef<FitDialogComponent>;
    private dataService;
    private storeService;
    private mediator;
    private iconRegistry;
    private sanitizer;
    private translate;
    selectedTab: number;
    basicInfos: Array<any>;
    basicInfosForm: FormGroup;
    shapes: Array<any>;
    measurements: Array<any>;
    measurementsForm: FormGroup;
    bodyShapeList: Array<any>;
    selectedImgUrl: string;
    metricUnit: boolean;
    myModel: string;
    feetMask: (string | RegExp)[];
    inchMask: (string | RegExp)[];
    lbsMask: (string | RegExp)[];
    constructor(dialogRef: MdDialogRef<FitDialogComponent>, dataService: DataService, storeService: MetaformaService, mediator: FitMediatorComponent, iconRegistry: MdIconRegistry, sanitizer: DomSanitizer, translate: TranslateService);
    ngOnInit(): void;
    test(f: any): void;
    submitMeasurements(): void;
    notify(msg: any): void;
    setSex(sex: any): void;
    goNext(): void;
    goBack(): void;
    closeDialogBox(): void;
    goTo(index: any): void;
    setShape(bodyShapeObj: any, $event: any): void;
    private toFormGroup(array);
    getInputPlacerholder(form: any, bodySpec: any): any;
    changeUnits(): void;
    setValue(value: any, unit: any): any;
    convertInchToCm(value: any): any;
    convertFeetToCm(value: any): any;
    convertLbsToKg(value: any): any;
    getInImperial(value: any, unit: any): any;
    convertToLbs(value: any): number;
    convertToFeet(value: any): any;
    formatFeetValue(feet: any, inches: any): any;
    convertToInch(value: any): any;
    changeLanguage(): void;
    getOtherLanguage(): string;
}
